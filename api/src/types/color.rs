/// Generated by transpiler v0.1.0 on Fri May 27 06:16:18 UTC 2022

use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize)]
pub struct Color {
    #[serde(rename = "definitions")]
    definitions: Definitions,
    #[serde(rename = "$id")]
    id: String,
    #[serde(rename = "$comment")]
    comment: String,
}

#[derive(Serialize, Deserialize)]
pub struct Definitions {
    #[serde(rename = "Color")]
    color: ColorClass,
}

#[derive(Serialize, Deserialize)]
pub struct ColorClass {
    #[serde(rename = "anyOf")]
    any_of: Vec<AnyOf>,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct AnyOf {
    #[serde(rename = "type")]
    any_of_type: Option<String>,
    #[serde(rename = "title")]
    title: String,
    #[serde(rename = "$ref")]
    any_of_ref: Option<String>,
}