/// Generated by transpiler v0.1.0 on Fri May 27 06:16:18 UTC 2022

use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize)]
pub struct Geometric {
    #[serde(rename = "definitions")]
    definitions: Definitions,
    #[serde(rename = "$id")]
    id: String,
    #[serde(rename = "$comment")]
    comment: String,
}

#[derive(Serialize, Deserialize)]
pub struct Definitions {
    #[serde(rename = "ChartArea")]
    chart_area: ChartArea,
    #[serde(rename = "Point")]
    point: Point,
    #[serde(rename = "TRBL")]
    trbl: Trbl,
    #[serde(rename = "TRBLCorners")]
    trbl_corners: TrblCorners,
    #[serde(rename = "CornerRadius")]
    corner_radius: CornerRadius,
    #[serde(rename = "RoundedRect")]
    rounded_rect: RoundedRect,
}

#[derive(Serialize, Deserialize)]
pub struct ChartArea {
    #[serde(rename = "type")]
    chart_area_type: String,
    #[serde(rename = "properties")]
    properties: ChartAreaProperties,
    #[serde(rename = "required")]
    required: Vec<String>,
    #[serde(rename = "additionalProperties")]
    additional_properties: bool,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct ChartAreaProperties {
    #[serde(rename = "top")]
    top: CornerRadius,
    #[serde(rename = "left")]
    left: CornerRadius,
    #[serde(rename = "right")]
    right: CornerRadius,
    #[serde(rename = "bottom")]
    bottom: CornerRadius,
    #[serde(rename = "width")]
    width: CornerRadius,
    #[serde(rename = "height")]
    height: CornerRadius,
}

#[derive(Serialize, Deserialize)]
pub struct CornerRadius {
    #[serde(rename = "type")]
    corner_radius_type: Type,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct Point {
    #[serde(rename = "type")]
    point_type: String,
    #[serde(rename = "properties")]
    properties: PointProperties,
    #[serde(rename = "required")]
    required: Vec<String>,
    #[serde(rename = "additionalProperties")]
    additional_properties: bool,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct PointProperties {
    #[serde(rename = "x")]
    x: CornerRadius,
    #[serde(rename = "y")]
    y: CornerRadius,
}

#[derive(Serialize, Deserialize)]
pub struct RoundedRect {
    #[serde(rename = "type")]
    rounded_rect_type: String,
    #[serde(rename = "properties")]
    properties: RoundedRectProperties,
    #[serde(rename = "required")]
    required: Vec<String>,
    #[serde(rename = "additionalProperties")]
    additional_properties: bool,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct RoundedRectProperties {
    #[serde(rename = "x")]
    x: CornerRadius,
    #[serde(rename = "y")]
    y: CornerRadius,
    #[serde(rename = "w")]
    w: CornerRadius,
    #[serde(rename = "h")]
    h: CornerRadius,
    #[serde(rename = "radius")]
    radius: Radius,
}

#[derive(Serialize, Deserialize)]
pub struct Radius {
    #[serde(rename = "$ref")]
    radius_ref: String,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct Trbl {
    #[serde(rename = "type")]
    trbl_type: String,
    #[serde(rename = "properties")]
    properties: TrblProperties,
    #[serde(rename = "required")]
    required: Vec<String>,
    #[serde(rename = "additionalProperties")]
    additional_properties: bool,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct TrblProperties {
    #[serde(rename = "top")]
    top: CornerRadius,
    #[serde(rename = "right")]
    right: CornerRadius,
    #[serde(rename = "bottom")]
    bottom: CornerRadius,
    #[serde(rename = "left")]
    left: CornerRadius,
}

#[derive(Serialize, Deserialize)]
pub struct TrblCorners {
    #[serde(rename = "type")]
    trbl_corners_type: String,
    #[serde(rename = "properties")]
    properties: TrblCornersProperties,
    #[serde(rename = "required")]
    required: Vec<String>,
    #[serde(rename = "additionalProperties")]
    additional_properties: bool,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct TrblCornersProperties {
    #[serde(rename = "topLeft")]
    top_left: CornerRadius,
    #[serde(rename = "topRight")]
    top_right: CornerRadius,
    #[serde(rename = "bottomLeft")]
    bottom_left: CornerRadius,
    #[serde(rename = "bottomRight")]
    bottom_right: CornerRadius,
}

#[derive(Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "number")]
    Number,
}