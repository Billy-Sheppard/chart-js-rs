/// Generated by transpiler v0.1.0 on Fri May 27 06:16:18 UTC 2022

use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize)]
pub struct Animation {
    #[serde(rename = "definitions")]
    definitions: Definitions,
    #[serde(rename = "$id")]
    id: String,
    #[serde(rename = "$comment")]
    comment: String,
}

#[derive(Serialize, Deserialize)]
pub struct Definitions {
    #[serde(rename = "AnimationEvent")]
    animation_event: AnimationEvent,
}

#[derive(Serialize, Deserialize)]
pub struct AnimationEvent {
    #[serde(rename = "type")]
    animation_event_type: String,
    #[serde(rename = "properties")]
    properties: Properties,
    #[serde(rename = "required")]
    required: Vec<String>,
    #[serde(rename = "additionalProperties")]
    additional_properties: bool,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct Properties {
    #[serde(rename = "chart")]
    chart: Chart,
    #[serde(rename = "numSteps")]
    num_steps: CurrentStep,
    #[serde(rename = "initial")]
    initial: CurrentStep,
    #[serde(rename = "currentStep")]
    current_step: CurrentStep,
}

#[derive(Serialize, Deserialize)]
pub struct Chart {
    #[serde(rename = "$ref")]
    chart_ref: String,
    #[serde(rename = "title")]
    title: String,
}

#[derive(Serialize, Deserialize)]
pub struct CurrentStep {
    #[serde(rename = "type")]
    current_step_type: String,
    #[serde(rename = "title")]
    title: String,
}